{"version":3,"sources":["components/button/Button.js","components/imageGallery/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/modal/Modal.js","components/searchBar/SearchBar.js","components/services/imageApi.js","components/loader/Loader.js","App.js","index.js"],"names":["Button","onClick","className","ImageGalleryItem","image","getImage","src","webformatURL","alt","tags","data-image","largeImageURL","ImageGallery","images","map","id","modalRoot","document","getElementById","Modal","onKeyDownCloseModal","e","code","props","onClose","onCloseBackdropModal","currentTarget","target","window","addEventListener","this","removeEventListener","open","createPortal","Component","defaultProps","SearchBar","state","query","handleChange","setState","value","handleSubmit","preventDefault","onSubmit","type","autocomplete","autofocus","placeholder","onChange","name","fetchImagesApi","searchQuery","page","axios","get","then","response","data","hits","propTypes","PropTypes","string","isRequired","number","ImageLoader","color","height","width","App","pageNumber","error","isLoading","isModalOpen","largeImageId","fetchImages","length","found","prevState","catch","finally","onChangeQuery","onLoadMore","evt","dataset","toggleModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render"],"mappings":"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","file":"static/js/main.a66c6a93.chunk.js","sourcesContent":["import React from 'react'\n\nconst Button = ({ onClick }) => {\n    return (\n        <>\n            <button className=\"Button\" onClick={onClick}>Load More</button>\n        </>\n    );\n}\n\nexport default Button;","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ image, getImage }) => {\n    return (\n        <>\n            <li className=\"ImageGalleryItem\">\n                <img src={image.webformatURL} alt={image.tags} className=\"ImageGalleryItem-image\" onClick={getImage} data-image={image.largeImageURL} />\n            </li>\n        </>\n    );\n}\n\n// ImageGalleryItem.propTypes = {\n//     image: PropTypes.shape({\n//         webformatURL: PropTypes.string,\n//     })\n// }\nexport default ImageGalleryItem;","import React from 'react'\nimport ImageGalleryItem from './ImageGalleryItem';\n\n\nconst ImageGallery = ({ images, getImage }) => {\n    return (\n        <>\n            <ul className=\"ImageGallery\">\n                {images.map((image) => (\n                    <ImageGalleryItem\n                        image={image}\n                        key={image.id}\n                        getImage={getImage}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nexport default ImageGallery;","import React, { Component } from 'react';\nimport { createPortal } from \"react-dom\";\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport default class Modal extends Component {\n    static defaultProps = {\n        open: false,\n    }\n    static propTypes = {\n        open: PropTypes.bool,\n        onClose: PropTypes.bool,\n    }.isRequired\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.onKeyDownCloseModal)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.onKeyDownCloseModal)\n    }\n\n    onKeyDownCloseModal = e => {\n        if (e.code === 'Escape') {\n            this.props.onClose()\n        }\n    }\n\n    onCloseBackdropModal = (e) => {\n        if (e.currentTarget === e.target) {\n            this.props.onClose();\n        }\n    }\n\n\n    render() {\n        const { open } = this.props;\n\n        return createPortal(\n            open ? (\n                <div className=\"Overlay\" onClick={this.onCloseBackdropModal}>\n                    <div className=\"Modal\">\n                        <img src={this.props.largeImageURL} alt=\"\" />\n                    </div>\n                </div>\n            ) : null, modalRoot\n        )\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass SearchBar extends Component {\n\n    // static PropTypes = {\n    //     onSubmit: PropTypes.func.isRequired\n    // }\n\n    state = {\n        query: ''\n    };\n    \n    handleChange = e => {\n        this.setState({ query: e.currentTarget.value });\n\n    };\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.props.onSubmit(this.state.query);\n        this.setState({ query: '' });\n    }\n\n\n\n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n\n                    <input\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        autocomplete=\"off\"\n                        autofocus\n                        placeholder=\"Search images and photos\"\n                        onChange={this.handleChange}\n                        value={this.state.query}\n                        name=\"query\"\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n\nexport default SearchBar;","\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst fetchImagesApi = (searchQuery, page = 1) => {\n    return axios\n        .get(\n            `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=21139960-6a394b07a806e5d76da1f60b2&image_type=photo&orientation=horizontal&per_page=12`,\n        )\n        .then(response => response.data.hits);\n};\n\nfetchImagesApi.propTypes = {\n    searchQuery: PropTypes.string.isRequired,\n    page: PropTypes.number.isRequired,\n};\n\nexport default { fetchImagesApi}\n\n","import React, { Component } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from \"react-loader-spinner\";\n\nclass ImageLoader extends Component {\n    render() {\n        return (\n            <div className=\"loader\">\n                <Loader type=\"Hearts\" color=\"#3023e7\" height={80} width={80} />\n            </div>\n        );\n    }\n}\n\nexport default ImageLoader;","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport Button from './components/button/Button';\nimport ImageGallery from './components/imageGallery/ImageGallery';\nimport Modal from './components/modal/Modal';\nimport SearchBar from './components/searchBar/SearchBar';\nimport fetchImages from './components/services/imageApi';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport ImageLoader from './components/loader/Loader';\n\n\nclass App extends Component {\n  state = {\n    \n      searchQuery: '',\n      images: [],\n      pageNumber: 1,\n      error: '',\n      isLoading: false,\n      isModalOpen: false,\n      largeImageId: null,\n      // largeImage: [],\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, pageNumber } = this.state;\n    if (prevState.pageNumber !== pageNumber) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages()\n    }\n    \n\n  }\n  fetchImages = () => {\n    const { searchQuery, pageNumber } = this.state;\n    this.setState({ isLoading: true });\n\n    fetchImages\n      .fetchImagesApi(searchQuery, pageNumber)\n      .then(images => {\n        if (images.length === 0) {\n          this.setState({ found: false });\n        } else {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images],\n            pageNumber: prevState.pageNumber + 1,\n            \n          }));\n        }\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n    \n    \n  };\n\n \n  onChangeQuery = (query) => {\n    this.setState({ searchQuery: query, pageNumber: 1, images: [] });\n  }\n  onLoadMore = () => {\n    this.setState((prevState) => ({ pageNumber: prevState.pageNumber + 1 }))\n  }\n\n  getImage = evt => {\n    this.setState({\n      largeImageURL: evt.target.dataset.image\n    });\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ isModalOpen }) => ({\n      isModalOpen: !isModalOpen\n    }));\n  };\n\n\n  render() {\n    const { images, isLoading, isModalOpen, largeImageURL} = this.state;\n    return (\n      <>\n        <SearchBar onSubmit={this.onChangeQuery} />\n        <ImageGallery images={images} getImage={this.getImage} />\n        { isLoading && <ImageLoader />}\n        {images.length > 0 &&\n          <Button onClick={this.fetchImages} />\n        }\n        <Modal open={isModalOpen} onClose={this.toggleModal} largeImageURL={largeImageURL} />\n\n\n        </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}